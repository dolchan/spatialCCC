% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_ccc.R
\name{compute_spatial_ccc_tbl}
\alias{compute_spatial_ccc_tbl}
\title{Compute ligand-receptor interactions}
\usage{
compute_spatial_ccc_tbl(
  spe,
  assay_name = "logcounts",
  LRdb,
  expression_min_prop = 0.05,
  spot_dist_cutoff = 1.5,
  LRscore_cutoff = 0.5
)
}
\arguments{
\item{spe}{SpatialExperiment object}

\item{assay_name}{assay name in string}

\item{LRdb}{LRdb in data.frame (see \code{\link[=get_LRdb]{get_LRdb()}})}

\item{expression_min_prop}{minimum proportion of samples
with non-zero expression value (default: 0.05)}

\item{spot_dist_cutoff}{cutoff value for norm.d in spot
distances. Default cutoff is 1.5 and
it comes from sqrt(3) ~ 1.73, based on how Visium spot-array is
arranged, so by default, only computing nearest neighbors.}

\item{LRscore_cutoff}{minimum LRscore to keep}
}
\value{
LRscore table in data.frame with the following columns:
\describe{
\item{src, dst}{source and destination cells/spots}
\item{d, norm.d}{cell-cell/spot-spot distance and normalized distance}
\item{ligand, receptor}{ligand & receptor genes}
\item{LRscore}{LRscore -- see above}
\item{weight}{weight -- reciprocal of norm.d}
\item{WLRscore}{weighted LRscore = \eqn{weight \cdot LRscore}}
}
}
\description{
Compute ligand-receptor interactions (LRscore) between neighboring spots.
Neighboring spots are those with norm.d < spot_dist_cutoff.
}
\details{
\deqn{LRscore = \frac{\sqrt{x_L \cdot x_R}}{\sqrt{x_L \cdot x_R} + C}}

where \eqn{x_L} and \eqn{x_R} are expression values of
ligand (L) and receptor (R), and \eqn{C} is the average gene expression
across all genes and all samples.

source: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7261168/
}
\examples{
\dontrun{
# read Visium spatial transcriptomic data
#   and log-normalize data
spe <-
  SpatialExperiment::read10xVisium(
    samples = data_dir,
    type = "HDF5",
    data = "filtered") \%>\%
    logNormCounts()

# get built-in LR datbase for mouse
LRdb_mouse <- get_LRdb("mouse")

# calculate LRscores
ccc_table <-
  compute_spatial_ccc(
    spe = spe,
    assay_name = "logcounts",
    LRdb = LRdb_mouse)#'
}

}
